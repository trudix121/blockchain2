<!DOCTYPE html>
<html>
  <head>
    <script
      src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/js/bootstrap.bundle.min.js"
      integrity="sha384-ENjdO4Dr2bkBIFxQpeoTz1HIcje39Wm4jDKdf19U8gI4ddQ3GYNS7NTKfAdVQSZe"
      crossorigin="anonymous"
    ></script>
    <link
      href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/css/bootstrap.min.css"
      rel="stylesheet"
      integrity="sha384-KK94CHFLLe+nY2dmCWGMq91rCGa5gtU4mk92HdvYe+M/SXH301p5ILy+dN9+nJOZ"
      crossorigin="anonymous"
    />
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
    <nav class="navbar navbar-expand-lg bg-light">
      <div class="container-fluid">
        <a class="navbar-brand" href="">Games</a>
        <button
          class="navbar-toggler"
          type="button"
          data-bs-toggle="collapse"
          data-bs-target="navbarSupportedContent"
          aria-controls="navbarSupportedContent"
          aria-expanded="false"
          aria-label="Toggle navigation"
        >
          <span class="navbar-toggler-icon"></span>
        </button>
        <div class="collapse navbar-collapse" id="navbarSupportedContent">
          <ul class="navbar-nav me-auto mb-2 mb-lg-0">
            <li class="nav-item">
              <a
                class="nav-link"
                aria-current="page"
                href="/blockchain?username=<%=username%>"
                >Return To BlockChain</a
              >
            </li>
            <li class="nav-item">
              <a
                class="nav-link"
                aria-current="page"
                href="/games/ng?username=<%=username%>"
                >Number Guessing</a
              >
            </li>
            <li class="nav-item">
              <a
                class="nav-link active"
                aria-current="page"
                href="/games/blackjack?username=<%=username%>"
                >Blackjack</a
              >
            </li>
          </ul>
        </div>
      </div>
    </nav>
    <title>Joc de Blackjack</title>
    <style>
      body {
        font-family: Arial, sans-serif;
      }

      h1 {
        text-align: center;
      }

      .button {
        margin: 10px;
        padding: 10px 20px;
        font-size: 16px;
      }

      #message {
        font-weight: bold;
        text-align: center;
      }

      #playerMoney,
      #dealerMoney,
      #playerHand,
      #dealerHand {
        text-align: center;
      }
      #playerMoney,
      #dealerMoney {
        color: green;
      }
    </style>
  </head>
  <body style="background-color: chartreuse">
    <h1>Joc de Blackjack</h1>
    <button id="startButton" class="button">Start</button>
    <button id="hitButton" class="button" disabled>Hit</button>
    <button id="standButton" class="button" disabled>Stand</button>
    <button id="quitButton" class="button" disabled>Quit</button>
    <p id="playerMoney">Bani jucător: <%=money%></p>
    <p id="dealerMoney">Bani dealer: 100</p>
    <p id="message">Apasă butonul Start pentru a începe jocul!</p>
    <p id="playerHand">Cărți jucător:</p>
    <p id="dealerHand">Cărți dealer:</p>
    <p id="handSum"></p>
    <label for="betInput">Miză:</label>
    <input type="number" id="betInput" min="1" max="100" value="10" />
    <script>
      // Variabile
      var raw_playermoney = "<%= money %>";
      var playerMoney = parseInt(raw_playermoney);
      var dealerMoney = 100;
      var betAmount = 10;
      var playerHand = [];
      var dealerHand = [];
      var gameStarted = false;
      var gameOver = false;

      // Elemente HTML
      var startButton = document.getElementById("startButton");
      var hitButton = document.getElementById("hitButton");
      var standButton = document.getElementById("standButton");
      var quitButton = document.getElementById("quitButton");
      var playerMoneyElement = document.getElementById("playerMoney");
      var dealerMoneyElement = document.getElementById("dealerMoney");
      var messageElement = document.getElementById("message");
      var playerHandElement = document.getElementById("playerHand");
      var dealerHandElement = document.getElementById("dealerHand");
      var betInput = document.getElementById("betInput");
      var handSumElement = document.getElementById("handSum");

      // Funcție pentru a scădea suma de bani
      // Funcție pentru a scădea suma de bani
      function remove_money(username, data) {
        console.log("test1");
        console.log(data);

        $.ajax({ 
          url: "http://localhost:3000/games/bk/remove",
          type: "POST",
          dataType: "json",
          contentType: "application/json",
          data: JSON.stringify({ username: username, moneyrm: data }),
          success: function (result) {
            console.log("Răspuns:", result);
            // Continuați procesarea răspunsului
          },
          error: function (error) {
            console.error("Eroare:", error);
            // Tratați eroarea
          },
        });
      }

      // Funcție pentru a adăuga suma de bani
      function add_money(username, data) {
        console.log("test1");
        console.log(data);

        $.ajax({
          url: "http://localhost:3000/games/bk/add",
          type: "POST",
          dataType: "json",
          contentType: "application/json",
          data: JSON.stringify({ username: username, moneyad: data }),
          success: function (result) {
            console.log("Răspuns:", result);
            // Continuați procesarea răspunsului
          },
          error: function (error) {
            console.error("Eroare:", error);
            // Tratați eroarea
          },
        });
      }

      // Funcție pentru amestecarea pachetului de cărți
      function shuffleDeck() {
        var deck = [];
        var ranks = [2, 3, 4, 5, 6, 7, 8, 9, 10];
        var numCards = ranks.length;

        for (var i = 0; i < numCards; i++) {
          deck.push(ranks[i]);
        }

        for (var k = 0; k < 1000; k++) {
          var card1Index = Math.floor(Math.random() * numCards);
          var card2Index = Math.floor(Math.random() * numCards);
          var temp = deck[card1Index];
          deck[card1Index] = deck[card2Index];
          deck[card2Index] = temp;
        }

        return deck;
      }

      // Funcție pentru afișarea cărților jucătorului
      function displayPlayerHand() {
        playerHandElement.textContent =
          "Cărți jucător: " + playerHand.join(", ");
      }

      // Funcție pentru afișarea cărților dealerului
      function displayDealerHand() {
        dealerHandElement.textContent =
          "Cărți dealer: " + dealerHand.join(", ");
      }

      // Funcție pentru afișarea sumei cărților
      function displayHandSum() {
        handSumElement.textContent =
          "Suma cărților: " + calculateScore(playerHand);
      }
      var moneyrm = 0;
      var moneyad = 0;
      function playerWin() {
        playerMoney = playerMoney + betAmount * 2;
        moneyad += betAmount * 2;
        messageElement.innerHTML =
          "<h1>Ai câștigat runda!</h1><p>Suma câștigată: " +
          betAmount * 2 +
          "</p>";

        console.log(moneyad);

        endRound();
      }
      setInterval(() => {
        if (moneyrm > 0) {
          remove_money("<%=username%>", moneyrm);
          moneyrm = 0;
        }
        if (moneyad > 0) {
          add_money("<%=username%>", moneyad);
          moneyad = 0;
        }
      }, 20000);
      // Funcție pentru începerea jocului
      function startGame() {
        gameStarted = true;

        gameOver = false;
        playerHand = [];
        dealerHand = [];
        betAmount = parseInt(betInput.value);
        deck = shuffleDeck();

        if (betAmount > playerMoney) {
          messageElement.textContent =
            "Nu ai suficienți bani pentru a plasa această miză!";
          messageElement.classList.add("error");
          return;
        }

        playerHand.push(deck.pop());
        dealerHand.push(deck.pop());
        playerHand.push(deck.pop());
        dealerHand.push(deck.pop());

        startButton.disabled = true;
        hitButton.disabled = false;
        standButton.disabled = false;
        quitButton.disabled = true;
        messageElement.textContent = "Alege: Hit sau Stand";
        messageElement.classList.remove("error");
        playerMoney -= betAmount;
        moneyrm += betAmount;

        updateMoney();
        displayPlayerHand();
        displayDealerHand();
        displayHandSum();
      }

      function fetch_money() {
        window.addEventListener("unload", (event) => {
          if (moneyrm > 0) {
            remove_money("<%=username%>", moneyrm);
            console.log("debug1");
          }
          if (moneyad > 0) {
            add_money("<%=username%>", moneyad);
            console.log("debug12");
          }
          console.log("test");
        });
      }

      // Funcție pentru extragerea unei cărți noi
      function hit() {
        playerHand.push(deck.pop());

        if (calculateScore(playerHand) > 21) {
          playerLose();
        }

        updateMoney();
        displayPlayerHand();
        displayHandSum();
      }

      // Funcție pentru oprirea extragerii de cărți
      function stand() {
        while (calculateScore(dealerHand) < 17) {
          dealerHand.push(deck.pop());
        }

        if (calculateScore(dealerHand) > 21) {
          playerWin();
        } else if (calculateScore(dealerHand) > calculateScore(playerHand)) {
          playerLose();
        } else if (calculateScore(dealerHand) < calculateScore(playerHand)) {
          playerWin();
        } else {
          playerTie();
        }

        updateMoney();
        displayDealerHand();
        displayHandSum();
      }

      // Funcție pentru renunțarea la joc
      function quit() {
        gameOver = true;
        gameStarted = false;
        startButton.disabled = false;
        hitButton.disabled = true;
        standButton.disabled = true;
        quitButton.disabled = true;
        messageElement.textContent = "Jocul a fost încheiat!";
      }

      // Funcție pentru calcularea scorului unei mâini
      function calculateScore(hand) {
        var score = 0;
        for (var i = 0; i < hand.length; i++) {
          score += hand[i];
        }
        return score;
      }

      // Funcție pentru actualizarea banilor
      function updateMoney() {
        playerMoneyElement.textContent = "Bani jucător: " + playerMoney;
        dealerMoneyElement.textContent = "Bani dealer: " + dealerMoney;
      }

      // Funcție pentru încheierea rundei când jucătorul câștigă

      // Funcție pentru încheierea rundei când jucătorul pierde
      function playerLose() {
        dealerMoney += betAmount;
        messageElement.style.color = "#FF0000";
        messageElement.innerHTML =
          "<h1>Ai pierdut runda!</h1><p>Suma pierdută: " + betAmount + "</p>";

        endRound();
      }

      // Funcție pentru încheierea rundei când este remiză
      function playerTie() {
        messageElement.innerHTML =
          "<h1>Este remiză!</h1><p>Niciunul dintre voi nu câștigă sau pierde.</p>";
        moneyad += betAmount
        dealerMoney += betAmount

        endRound();
      }

      // Funcție pentru încheierea rundei și pregătirea pentru următoarea rundă
      function endRound() {
        if (playerMoney === 0) {
          gameOver = true;
          gameStarted = false;
          startButton.disabled = true;
          hitButton.disabled = true;
          standButton.disabled = true;
          quitButton.disabled = true;
          messageElement.innerHTML +=
            "<p>Ai rămas fără bani! Jocul s-a încheiat.</p>";
        } else {
          gameOver = true;
          gameStarted = false;
          startButton.disabled = false;
          hitButton.disabled = true;
          standButton.disabled = true;
          quitButton.disabled = false;
          messageElement.innerHTML += "<p>Apasă Start pentru o nouă rundă.</p>";
        }
      }

      // Evenimente click pentru butoane
      startButton.addEventListener("click", startGame);
      hitButton.addEventListener("click", hit);
      standButton.addEventListener("click", stand);
      quitButton.addEventListener("click", quit);
    </script>
  </body>
</html>
